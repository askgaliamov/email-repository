group 'email-repository'
version '1.0-SNAPSHOT'

apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'groovy'
apply plugin: 'org.flywaydb.flyway'

compileJava {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    options.encoding = "UTF-8"
}

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
    }
}

ext {
    jacksonVersion = '2.6.0-rc4'
    dbURL = 'jdbc:mysql://localhost:3306/email_repository'
    dbUser = "admin"
    dbPassword = "d0cker"
}

dependencies {
    compile 'com.sparkjava:spark-core:2.2'
    compile "com.fasterxml.jackson.core:jackson-core:$jacksonVersion"
    compile "com.fasterxml.jackson.core:jackson-databind:$jacksonVersion"
    compile "org.jooq:jooq:3.6.2"
    compile "commons-dbcp:commons-dbcp:1.4"

    testCompile group: 'junit', name: 'junit', version: '4.11'
    runtime 'mysql:mysql-connector-java:5.1.36'
}

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }

    dependencies {
        classpath 'org.jooq:jooq-codegen:3.6.2'
        classpath 'mysql:mysql-connector-java:5.1.36'
        classpath 'com.h2database:h2:1.3.170'
        classpath 'org.flywaydb:flyway-gradle-plugin:3.2.1'
    }
}

project(':test/functional') {
    apply plugin: 'groovy'

    dependencies {
        compile 'info.cukes:cucumber-groovy:1.2.2'
        compile 'info.cukes:cucumber-junit:1.2.2'
        compile 'org.codehaus.groovy:groovy-all:2.4.3'
        compile 'com.google.guava:guava:18.0'
        compile('com.google.inject:guice:3.0') {
            exclude module: 'cglib'
        }
        compile('com.netflix.governator:governator:1.2.18') {
            exclude module: 'archaius-core'
        }
        compile("org.codehaus.groovy.modules.http-builder:http-builder:0.7.1")
        runtime 'mysql:mysql-connector-java:5.1.36'
    }
    test
}

flyway {
    url = dbURL
    user = dbUser
    password = dbPassword
}

def writer = new StringWriter()
def xml = new groovy.xml.MarkupBuilder(writer)
        .configuration('xmlns': 'http://www.jooq.org/xsd/jooq-codegen-3.6.0.xsd') {
    jdbc() {
        driver('com.mysql.jdbc.Driver')
        url(dbURL)
        user(dbUser)
        password(dbPassword)
    }
    generator() {
        database() {
            inputSchema('email_repository')
        }
        generate() {
        }
        target() {
            packageName('com.galiamov.mailrepository.db')
            directory('src/main/java')
        }
    }
}

task(generate) << {
    org.jooq.util.GenerationTool.generate(
            javax.xml.bind.JAXB.unmarshal(new StringReader(writer.toString()), org.jooq.util.jaxb.Configuration.class)
    )
}

task run(type: JavaExec) {
    main = 'com.galiamov.mailrepository.EmailService'
    classpath = sourceSets.test.runtimeClasspath
}


