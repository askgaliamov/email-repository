/**
 * This class is generated by jOOQ
 */
package com.galiamov.mailrepository.db.tables;


import com.galiamov.mailrepository.db.Keys;
import com.galiamov.mailrepository.db.tables.records.EmailRepositoryRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.Identity;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.TableImpl;
import org.jooq.types.UInteger;


/**
 * This class is generated by jOOQ.
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class EmailRepository extends TableImpl<EmailRepositoryRecord> {

	private static final long serialVersionUID = -1914794818;

	/**
	 * The reference instance of <code>email_repository.email_repository</code>
	 */
	public static final EmailRepository EMAIL_REPOSITORY = new EmailRepository();

	/**
	 * The class holding records for this type
	 */
	@Override
	public Class<EmailRepositoryRecord> getRecordType() {
		return EmailRepositoryRecord.class;
	}

	/**
	 * The column <code>email_repository.email_repository.id</code>.
	 */
	public final TableField<EmailRepositoryRecord, UInteger> ID = createField("id", org.jooq.impl.SQLDataType.INTEGERUNSIGNED.nullable(false), this, "");

	/**
	 * The column <code>email_repository.email_repository.email</code>.
	 */
	public final TableField<EmailRepositoryRecord, String> EMAIL = createField("email", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaulted(true), this, "");

	/**
	 * The column <code>email_repository.email_repository.repository</code>.
	 */
	public final TableField<EmailRepositoryRecord, String> REPOSITORY = createField("repository", org.jooq.impl.SQLDataType.VARCHAR.length(255).nullable(false).defaulted(true), this, "");

	/**
	 * Create a <code>email_repository.email_repository</code> table reference
	 */
	public EmailRepository() {
		this("email_repository", null);
	}

	/**
	 * Create an aliased <code>email_repository.email_repository</code> table reference
	 */
	public EmailRepository(String alias) {
		this(alias, EMAIL_REPOSITORY);
	}

	private EmailRepository(String alias, Table<EmailRepositoryRecord> aliased) {
		this(alias, aliased, null);
	}

	private EmailRepository(String alias, Table<EmailRepositoryRecord> aliased, Field<?>[] parameters) {
		super(alias, com.galiamov.mailrepository.db.EmailRepository.EMAIL_REPOSITORY, aliased, parameters, "");
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public Identity<EmailRepositoryRecord, UInteger> getIdentity() {
		return Keys.IDENTITY_EMAIL_REPOSITORY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public UniqueKey<EmailRepositoryRecord> getPrimaryKey() {
		return Keys.KEY_EMAIL_REPOSITORY_PRIMARY;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public List<UniqueKey<EmailRepositoryRecord>> getKeys() {
		return Arrays.<UniqueKey<EmailRepositoryRecord>>asList(Keys.KEY_EMAIL_REPOSITORY_PRIMARY, Keys.KEY_EMAIL_REPOSITORY_EMAIL);
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public EmailRepository as(String alias) {
		return new EmailRepository(alias, this);
	}

	/**
	 * Rename this table
	 */
	public EmailRepository rename(String name) {
		return new EmailRepository(name, null);
	}
}
