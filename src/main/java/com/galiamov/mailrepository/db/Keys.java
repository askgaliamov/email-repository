/**
 * This class is generated by jOOQ
 */
package com.galiamov.mailrepository.db;


import com.galiamov.mailrepository.db.tables.EmailRepository;
import com.galiamov.mailrepository.db.tables.records.EmailRepositoryRecord;

import javax.annotation.Generated;

import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;
import org.jooq.types.UInteger;


/**
 * A class modelling foreign key relationships between tables of the <code>email_repository</code> 
 * schema
 */
@Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.6.2"
	},
	comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

	// -------------------------------------------------------------------------
	// IDENTITY definitions
	// -------------------------------------------------------------------------

	public static final Identity<EmailRepositoryRecord, UInteger> IDENTITY_EMAIL_REPOSITORY = Identities0.IDENTITY_EMAIL_REPOSITORY;

	// -------------------------------------------------------------------------
	// UNIQUE and PRIMARY KEY definitions
	// -------------------------------------------------------------------------

	public static final UniqueKey<EmailRepositoryRecord> KEY_EMAIL_REPOSITORY_PRIMARY = UniqueKeys0.KEY_EMAIL_REPOSITORY_PRIMARY;
	public static final UniqueKey<EmailRepositoryRecord> KEY_EMAIL_REPOSITORY_EMAIL = UniqueKeys0.KEY_EMAIL_REPOSITORY_EMAIL;

	// -------------------------------------------------------------------------
	// FOREIGN KEY definitions
	// -------------------------------------------------------------------------


	// -------------------------------------------------------------------------
	// [#1459] distribute members to avoid static initialisers > 64kb
	// -------------------------------------------------------------------------

	private static class Identities0 extends AbstractKeys {
		public static Identity<EmailRepositoryRecord, UInteger> IDENTITY_EMAIL_REPOSITORY = createIdentity(EmailRepository.EMAIL_REPOSITORY, EmailRepository.EMAIL_REPOSITORY.ID);
	}

	private static class UniqueKeys0 extends AbstractKeys {
		public static final UniqueKey<EmailRepositoryRecord> KEY_EMAIL_REPOSITORY_PRIMARY = createUniqueKey(EmailRepository.EMAIL_REPOSITORY, EmailRepository.EMAIL_REPOSITORY.ID);
		public static final UniqueKey<EmailRepositoryRecord> KEY_EMAIL_REPOSITORY_EMAIL = createUniqueKey(EmailRepository.EMAIL_REPOSITORY, EmailRepository.EMAIL_REPOSITORY.EMAIL, EmailRepository.EMAIL_REPOSITORY.REPOSITORY);
	}
}
